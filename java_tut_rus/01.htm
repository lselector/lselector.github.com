<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Глава 1 Революция по имени Java</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY>

<B><FONT FACE="Times New Roman" SIZE=5><P>Глава 1 Революция по имени Java</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Вообще опасно объявлять каждую новую технологию программирования революционной. Если вы поторопитесь подать свой голос за признание технологии, подобной той, которая реализована в языке Java, революционной — вас могут закидать тухлыми яйцами или занести в разряд пустозвонов, падких на модные новинки. Что же в таком случае делает тот или иной продукт революционным ? Он не может быть только лишь компактней, быстрее и дешевле. Такой продукт должен изменить весь стиль работы, радикально упростив решение сложных проблем.</P>
<P ALIGN="JUSTIFY">Создание языка Java — это действительно один из самых значительных шагов вперед в области разработки сред программирования за последние 20 лет. Язык HTML (Hypertext Markup Language — язык разметки гипертекста) был необходим для статического размещения страниц во “Всемирной паутине” WWW (World Wide Web). Язык Java потребовался для</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>качественного скачка в создании интерактивных продуктов для сети Internet. </P>
<P ALIGN="JUSTIFY">Три ключевых элемента объединились в технологии языка Java и сделали ее в корне отличной от всего, существующего на сегодняшний день.</P>

<UL>
<P ALIGN="JUSTIFY"><LI>Java предоставляет для широкого использования свои апплеты (applets) — небольшие, надежные, динамичные, не зависящие от платформы активные сетевые приложения, встраиваемые в страницы Web. Апплеты Java могут настраиваться и распространяться потребителям с такой же легкостью, как любые документы HTM</FONT><FONT SIZE=2>L.</LI></P>
</FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY"><LI>Java высвобождает мощь объектно-ориентированной разработки приложений, сочетая простой и знакомый синтаксис с надежной и удобной в работе средой разработки. Это позволяет широкому кругу программистов быстро создавать новые программы и новые апплеты.</LI></P>
<P ALIGN="JUSTIFY"><LI>Java предоставляет программисту богатый набор классов объектов для ясного абстрагирования многих системных функций, используемых при работе с окнами, сетью и для ввода-вывода. Ключевая черта этих классов заключается в том, что они обеспечивают создание независимых от используемой платформы абстракций для широкого спектра системных интерфейсов.</LI></P></UL>

<P>Давайте поближе познакомимся со всеми этими тремя аспектами, но сначала – история создания.</P>
</FONT><B><FONT FACE="Arial"><P>История создания</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Язык Java зародился как часть проекта создания передового программного обеспечения (ПО) для различных бытовых приборов. Реализация проекта была начата на языке С++, но вскоре возник ряд проблем, наилучшим средством борьбы с которыми было изменение самого инструмента - языка программирования. Стало очевидным, что необходим платформо-независимый язык программирования, позволяющий создавать программы, которые не приходилось бы компилировать отдельно для каждой архитектуры и можно было бы использовать на различных процессорах под различными операционными системами</FONT><FONT SIZE=2>. </P>
</FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Рождению языка Java предшествовала довольно интересная история. В 1990 году разработчик ПО компании </FONT><B><I><FONT FACE="Times New Roman" SIZE=2 COLOR="#800080">Sun Microsystems Патрик Нотон</B></I></FONT><FONT SIZE=2> (</FONT><B><I><FONT SIZE=2 COLOR="#800080">Patrick Naughton</B></I></FONT><FONT FACE="Times New Roman" SIZE=2>) понял, что ему надоело поддерживать сотни различных интерфейсов программ, используемых в компании, и сообщил исполнительному директору Sun Microsystems и своему другу </FONT><B><I><FONT FACE="Times New Roman" SIZE=2 COLOR="#800080">Скотту МакНили</B></I></FONT><FONT SIZE=2> (</FONT><B><I><FONT SIZE=2 COLOR="#800080">Scott McNealy</B></I></FONT><FONT FACE="Times New Roman" SIZE=2>) о своем намерении перейти работать в компанию NeXT. МакНили, в свою очередь, попросил Нотона составить список причин своего недовольства и выдвинуть такое решение проблем, как если бы он был Богом и мог исполнить все, что угодно. </P>
<P ALIGN="JUSTIFY">Нотон, хотя и не рассчитывал на то, что кто-то обратит внимание на его письмо, все же изложил свои претензии, беспощадно раскритиковав недостатки Sun Microsystems, в частности, разрабатываемую в тот момент архитектуру ПО NeWS. К удивлению Нотона, его письмо возымело успех: оно было разослано всем ведущим инженерам Sun Microsystems, которые не замедлили откликнуться и высказать горячую поддержку своему коллеге и одобрение его взглядов на ситуацию в Sun Microsystems. Обращение вызвало одобрение и у высшего руководства компании, а именно, у </FONT><B><I><FONT FACE="Times New Roman" SIZE=2 COLOR="#800080">Билла Джоя</B></I></FONT><FONT SIZE=2> (</FONT><B><I><FONT SIZE=2 COLOR="#800080">Bill Joy</B></I></FONT><FONT FACE="Times New Roman" SIZE=2>), основателя Sun Microsystems, и </FONT><B><I><FONT FACE="Times New Roman" SIZE=2 COLOR="#800080">Джеймса Гослинга</B></I></FONT><FONT SIZE=2> (</FONT><B><I><FONT SIZE=2 COLOR="#800080">James Gosling</B></I></FONT><FONT FACE="Times New Roman" SIZE=2>), начальника Нотона. </P>
<P ALIGN="JUSTIFY">В тот день, когда Нотон должен был уйти из компании, было принято решение о создании команды ведущих разработчиков с тем, чтобы они делали что угодно, но создали нечто необыкновенное. Команда из шести человек приступила к разработке нового объектно-ориентированного языка программирования, который был назван </FONT><B><I><FONT SIZE=2 COLOR="#800080">Oak</B></I></FONT><FONT FACE="Times New Roman" SIZE=2> (дуб), в честь дерева, росшего под окном Гослинга. </P>
<P ALIGN="JUSTIFY">Вскоре компания Sun Microsystems преобразовала команду Green в компанию First Person. Новая компания обладала интереснейшей концепцией, но не могла найти ей подходящего применения. После ряда неудач неожиданно ситуация для компании резко изменилась: был анонсирован броузер Mosaic - так родился World Wide Web, с которого началось бурное развитие Internet. Нотон предложил использовать Oak в создании Internet-приложений. Так Oak стал самостоятельным</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>продуктом, вскоре был написан Oak-компилятор и Oak-браузер </FONT><B><I><FONT SIZE=2 COLOR="#800080">"WebRunner"</B></I></FONT><FONT FACE="Times New Roman" SIZE=2>. В 1995 году компания Sun Microsystems приняла решение объявить о новом продукте, переименовав его в </FONT><B><I><FONT SIZE=2 COLOR="#800080">Java</B></I></FONT><FONT FACE="Times New Roman" SIZE=2> (единственное разумное объяснение названию - любовь программистов к кофе). Когда Java оказалась в руках Internet, стало необходимым запускать Java-аплеты - небольшие программы, загружаемые через Internet. WebRunner был переименован в </FONT><B><I><FONT SIZE=2 COLOR="#800080">HotJava</B></I></FONT><FONT FACE="Times New Roman" SIZE=2> и компания Netscape встала на поддержку Java-продуктов.</P>
</FONT><B><FONT FACE="Arial" SIZE=4><P>Апплеты Java</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P>Каждый апплет — это небольшая программа, динамически загружаемая по сети — точно так же, как картинка, звуковой файл или элемент мультипликации. Главная особенность апплетов заключается в том, что они являются настоящими программами, а не очередным форматом файлов для хранения мультфильмов или какой-либо другой информации. Апплет не просто проигрывает один и тот же сценарий, а реагирует на действия пользователя и может динамически менять свое поведение.</P>
<P ALIGN="JUSTIFY">Именно броские Web-страницы с анимацией привлекли большинство ранних приверженцев языка Java. Поскольку пользователи не сразу смогли полностью освоить наиболее революционные аспекты Java, этот язык часто сравнивался с другими технологиями для загрузки динамических изображений и простого взаимодействия с Web-клиентами. Компании, традиционно занимающиеся разработкой мультимедиа-технологий, например, Adobe или MacroMedia, утверждали, что их продукты предоставляют те же возможности, что и Java. По мнению Kaleida, Taligent и NeXT, их собственные объектно-ориентированные среды разработки были не менее революционны. Microsoft заявлял о победе технологии десятилетней давности. На самом деле ничто не может сравниться с тем, что вы откроете для себя, ощутив мощь программирования на языке Java.</P>
<P>Возможность задания любых уровней взаимодействия с пользователем существует лишь в том случае, когда используемая для разработки платформа предоставляет полнофункциональную среду программирования. </P>
</FONT><B><FONT FACE="Arial" SIZE=4><P>Революционный язык программирования</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Язык должен был воплощать следующие качества: простоту и мощь, безопасность, объектную ориентированность, надежность, интерактивность, архитектурную независимость, возможность интерпретации, высокую производительность и легкость в изучении. Даже если вы никогда не напишете ни одной строки на языке Java, знать о его возможностях весьма полезно, поскольку именно перечисленные выше свойства языка придают динамику страницам Всемирной паутины.</P>
</FONT><B><FONT FACE="Arial"><P>Простота и мощь</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">После освоения основных понятий объектно-ориентированного программирования вы быстро научитесь программировать на Java. В наши дни существует много систем программирования, гордящихся тем, что в них одной и той же цели можно достичь десятком различных способов. В языке Java изобилие решений отсутствует — для решения задачи у вас будет совсем немного вариантов. Стремление к простоте зачастую приводило к созданию неэффективных и невыразительных языков типа командных интерпретаторов. Java к числу таких языков не относится – для Вас вся мощность ООП и библиотек классов. </P>
</FONT><B><FONT FACE="Arial"><P>Безопасность</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В популярной литературе наших дней, особенно если речь заходит об Internet, стало модной темой обсуждение вопросов безопасности. Люди уверены, что использование Internet в коммерческой деятельности равносильно написанию номера своей кредитной карточки на стенке телефонной будки. Один из ключевых принципов</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>разработки языка Java заключался в обеспечении защиты от несанкционированного доступа. Программы на Java не могут вызывать глобальные функции и получать доступ к произвольным системным ресурсам, что обеспечивает в Java уровень безопасности, недоступный для других языков.</P>
</FONT><B><FONT FACE="Arial"><P>Объектная ориентированность</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Забавно наблюдать, как многочисленные новые диалекты старых языков безапелляционно объявляются объектно-ориентированными. Поскольку при разработке языка отсутствовала тяжелая наследственность, для реализации объектов был избран удобный прагматичный подход. Разработчики Java старались выдержать разумный компромисс между моделью пуристов — “все является объектами”, и моделью хакеров — “уйди с моей дороги”. Объектная модель в Java проста и легко расширяется, в то же</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>время, ради повышения производительности, числа и другие простые типы данных Java не являются объектами.</P>
</FONT><B><FONT FACE="Arial"><P>Надежность</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Java ограничивает вас в нескольких ключевых областях и таким образом способствует обнаружению ошибок на ранних стадиях разработки программы. В то же время в ней отсутствуют многие источники ошибок, свойственных другим языкам программирования (строгая типизация, например). Большинство используемых сегодня программ “отказывают” в одной из двух ситуаций: при выделении памяти, либо при возникновении исключительных ситуаций. В традиционных средах программирования распределение памяти является довольно нудным занятием — программисту приходится самому следить за всей используемой в программе памятью, не забывая освобождать ее по мере того, как потребность в ней отпадает. Зачастую программисты забывают освобождать захваченную ими память или, что еще хуже, освобождают ту память, которая все еще используется какой-либо частью программы. Исключительные ситуации в традиционных средах программирования часто возникают в таких, например, случаях, как деление на нуль или попытка открыть несуществующий файл, и их приходится обрабатывать с помощью неуклюжих и нечитабельных конструкций (кроме Delphi). Java фактически снимает обе эти проблемы, используя сборщик мусора для освобождения незанятой памяти и встроенные объектно-ориентированные средства для обработки исключительных ситуаций. </P>
</FONT><B><FONT FACE="Arial"><P>Интерактивность</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Java создавалась как средство, которое должно удовлетворить насущную потребность в создании интерактивных сетевых программ. В Java реализовано несколько интересных решений, позволяющих писать код, который выполняет одновременно массу различных функций и не забывает при этом следить за тем, что и когда должно произойти. В языке Java для решения проблемы синхронизации процессов применен наиболее элегантный из всех когда-либо изобретенных методов, который позволяет конструировать прекрасные интерактивные системы. Простые в обращении изящные подпроцессы Java дают возможность реализации в программе конкретного поведения, не</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>отвлекаясь при этом на встраивание глобальной циклической обработки событий.</P>
</FONT><B><FONT FACE="Arial"><P>Независимость от архитектуры ЭВМ</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Вопрос о долговечности и переносимости кода важнее религиозных войн между ПК и Макинтошами. Создатели Java наложили на язык и на среду времени выполнения несколько жестких требований, которые на деле, а не на словах позволяют, однажды написав, всегда запускать программу в любом месте и в любое время (где существует виртуальная Java-машина – броузеры на всех платформах, OS/2, Netware). </P>
</FONT><B><FONT FACE="Arial"><P>Интерпретация плюс высокая производительность</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Необычайная способность Java исполнять свой код на любой из поддерживаемых платформ достигается тем, что ее программы транслируются в некое промежуточное представление, называемое байт-кодом (bytecode). Байт-код, в свою очередь, может интерпретироваться в любой системе, в которой есть среда времени выполнения Java. Большинство ранних систем, в которых пытались обеспечить независимость от платформы, обладало огромным недостатком — потерей производительности (Basic, Perl). Несмотря на то, что в Java используется интерпретатор, байт-код легко переводится непосредственно в “родные” машинные коды (Just In Time compilers) “на лету”. При этом достигается очень высокая производительность (Symantec JIT встроен в Netscape Navigator). </P>
</FONT><B><FONT FACE="Arial"><P>Простота изучения</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Язык Java, хотя и более сложный чем языки командных интерпретаторов, все же неизмеримо проще для изучения, чем другие другие языки программирования, например C++. Черты языка станут казаться вам естественным путем для решения тех или иных задач и будут способствовать отработке хорошего стиля программирования. Поскольку объектная модель в Java одновременно проста и выразительна, вы скоро освоитесь с объектно-ориентированным стилем создания программ. </P>
</FONT><B><FONT FACE="Arial" SIZE=4><P>Богатая объектная среда</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Среда Java — это нечто гораздо большее, чем просто язык программирования. В нее встроен набор ключевых классов, содержащих основные абстракции реального мира, с которым придется иметь дело вашим программам. Основой популярности Java являются встроенные классы-абстракции,</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>сделавшие его языком, действительно независимым от платформы. Библиотеки, подобные MFC/COM, OWL, VCL, NeXTStep, Motif и OpenDoc прекрасно работают на своих платформах, однако сегодня главной платформой становится Internet.</P>
<P ALIGN="JUSTIFY">В реализации Java 1.1.6 находится 23 пакета (в Java 1.0.2 их было 8), а количество классов – 503 (211). Сейчас проходит завершающую стадию бета-тестирования JDK 1.2. Для тех, кто собирается поддерживать Java 1.0 наряду с 1.1 (актуальность этой поддержки подтверждает Borland JBuilder 2.0 и другие продукты), специально выделены новшества 1.1 в </FONT><A HREF="pril_2.htm"><U><FONT FACE="Times New Roman" SIZE=2 COLOR="#0000ff">Приложение 2</U></FONT></A><FONT SIZE=2>.</P>
</FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="RIGHT">Таблица 1</P>
</FONT><B><FONT FACE="Times New Roman"><P ALIGN="CENTER">Пакеты Java API</P></B></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=573>
<TR><TD WIDTH="41%" VALIGN="TOP">
<P><FONT FACE="Times New Roman" SIZE=2>Имя пакета</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Содержимое</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.applet</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для реализации апплетов</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.awt</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для работы с графикой, текстом, окнами и GUI</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.awt.datatransfer</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения передачи информации (Copy/Paste)</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.awt.event</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы и интерфейсы для обработки событий</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.awt.image</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обработки изображений</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.awt.peer</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>GUI для обеспечения независимости от платформы</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.beans</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>API для модели компонентов JavaBeans</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.io</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для различных типов ввода-вывода </FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.lang</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы ядра языка (типы, работа со строками, тригонометрические функции, обработка исключений, легковесные процессы)</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.lang.reflect</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы R</FONT><FONT SIZE=2>eflection API</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.math</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для арифметических операций произвольной точности</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.net</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для работы в сети Интернет (сокеты, протоколы, URL)</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.rmi</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы, связанные с RMI (удаленный вызов процедур)</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.rmi.dgc</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы, связанные с RMI </FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.rmi.registry</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы, связанные с RMI </FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.rmi.server</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы, связанные с RMI </FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.security</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения безопасности</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.security.acl</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения безопасности</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.security.interfaces</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения безопасности</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.sql</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.text</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения многоязыковой поддержки</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.text.resources</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения многоязыковой поддержки</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>&nbsp;java.util</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Разноообразные полезные типы данных (стеки, сдовари, хэш-таблицы, даты, генератор случайных чисел</FONT><FONT SIZE=2>)</FONT></TD>
</TR>
<TR><TD WIDTH="41%" VALIGN="TOP">
<FONT SIZE=2><P>java.util.zip</FONT></TD>
<TD WIDTH="59%" VALIGN="TOP">
<FONT FACE="Times New Roman" SIZE=2><P>Классы для обеспечения архивации</FONT></TD>
</TR>
</TABLE>

<FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Часть этих пакетов мы будем рассматривать очень подробно (это видно из оглавления), другая пойдет на самостоятельную проработку.</P></FONT></BODY>
</HTML>
