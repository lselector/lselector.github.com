<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Рисование "каракулей" в Java 1</TITLE>
</HEAD>
<BODY>

<B><FONT FACE="Arial"><P ALIGN="RIGHT">Приложение 2</P>
</FONT><I><FONT FACE="Times New Roman" SIZE=5><P ALIGN="CENTER">Новое в </FONT><FONT SIZE=5>Java 1.1</P>
</B></I></FONT><FONT SIZE=2><P ALIGN="JUSTIFY"></P>
</FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Скоро надо будет готовить приложение по </FONT><FONT SIZE=2>Java 1.2 (</FONT><FONT FACE="Times New Roman" SIZE=2>срок выхода – декабрь 1998 года). А пока новшествами</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> являются :</P>
<B><I><P>Встроенные классы</P>
</B></I><P ALIGN="JUSTIFY">Изменения, внесенные в сам язык и позволяющие включать классы друг в друга и в блоки программы.</P>
</FONT><B><I><FONT SIZE=2><P>Java</FONT><FONT FACE="Times New Roman" SIZE=2> Bean-объект</P>
</B></I><P ALIGN="JUSTIFY">Механизм построения модульных программных компонентов, предназначенных для многократного использования.</P>
<B><I><P>Многоязыковая поддержка</P>
</B></I><P ALIGN="JUSTIFY">Множество новых особенностей, позволяющих писать программы, которые работают в любой точке земного шара.</P>
<B><I><P>Новая модель обработки событий</P>
</B></I><P ALIGN="JUSTIFY">Новая модель обработки событий в графических пользовательских интерфейсах, предназначенная для того, чтобы облегчить построение таких интерфейсов.</P>
<B><I><P>Другие новые особенности</FONT><FONT SIZE=2> A WT</P>
</B></I><P ALIGN="JUSTIFY">AWT</FONT><FONT FACE="Times New Roman" SIZE=2> в</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> включает в себя поддержку вывода на печать, операций копирования и вставки, контекстных меню, клавиш ускоренного вызова меню, а также операций передачи фокуса. В нем улучшена поддержка цвета, шрифтов, курсоров, прокрутки и манипуляции изображениями.</P>
</FONT><B><I><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>Апплеты</P>
</B></I><P ALIGN="JUSTIFY">Применение JAR-файлов позволяет сгруппировать все файлы апплета в единый архив. Цифровые подписи открывают возможность запуска апплетов, пользующихся полным доверием пользователя, в условиях минимальных ограничений, связанных с безопасностью. </P>
<B><I><P>Сериализация объектов</P>
</B></I><P>Теперь объекты можно легко сериализовать для передачи по сети или записи на диск для постоянного хранения.</P>
<B><I><P>Отражение</P>
</B></I><P ALIGN="JUSTIFY">Программы на</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> могут теперь <I>отражаться</I></FONT><FONT SIZE=2> (reflection)</FONT><FONT FACE="Times New Roman" SIZE=2> на самих себя или на другой класс с целью определения методов и переменных, заданных в этом классе, аргументов, передаваемых методам, и т.д.</FONT><FONT SIZE=2> Reflection API</FONT><FONT FACE="Times New Roman" SIZE=2> позволяет также вызывать методы по имени.</P>
<B><I><P>Безопасность</P>
</B></I><P ALIGN="JUSTIFY">В</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> включены новые пакеты, которые обеспечивают поддержку цифровых подписей, обработку сообщений, обработку ключей и списков управления доступом.</P>
</FONT><B><I><FONT SIZE=2><P>Java Database Connectivity (JDBC)</P>
</B></I></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Новый пакет, позволяющий Java-программам посылать SQL-запросы серверам баз данных. В его состав входит "мост", который обеспечивает взаимодействие с существующими серверами баз данных</FONT><FONT SIZE=2> ODBC.</P>
</FONT><B><I><FONT FACE="Times New Roman" SIZE=2><P>Удаленный вызов методов</P>
</B></I><P ALIGN="JUSTIFY">Интерфейс для поддержки распределенных приложений на</FONT><FONT SIZE=2> Java,</FONT><FONT FACE="Times New Roman" SIZE=2> в которых программа, работающая на одном компьютере, может вызывать методы Java-объектов, хранящихся на другом компьютере.</P>
</FONT><B><I><FONT SIZE=4><P ALIGN="CENTER">Java 1.1 :</FONT><FONT FACE="Times New Roman" SIZE=4> пакет за пакетом</P>
</B></I></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Пакеты и классы в библиотеке классов</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> взаимосвязаны и взаимозависимы. Многие из новых особенностей</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> базируются на классах, принадлежащих к нескольким различным пакетам</FONT><FONT SIZE=2> Java API.</FONT><FONT FACE="Times New Roman" SIZE=2> Ниже описывается каждый из</FONT><FONT SIZE=2> 23</FONT><FONT FACE="Times New Roman" SIZE=2> пакетов, образующих ядро</FONT><FONT SIZE=2> Java 1.1 API.</FONT><FONT FACE="Times New Roman" SIZE=2> Здесь представлены новые пакеты, а также рассмотрены изменения, внесенные в имеющиеся пакеты.</P>
</FONT><FONT FACE="Arial" SIZE=1>
</FONT><B><FONT FACE="Arial" SIZE=2><P>Java.applet</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Кроме возможности создавать JAR-файлы и апплеты с цифровой подписью и вводить новые атрибуты в тег</FONT><FONT SIZE=2> &lt;applet&gt;, </FONT><FONT FACE="Times New Roman" SIZE=2>в пакет</FONT><FONT SIZE=2> java.applet </FONT><FONT FACE="Times New Roman" SIZE=2>никаких других существенных изменений внесено не было.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.awt</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В пакете</FONT><FONT SIZE=2> java.awt</FONT><FONT FACE="Times New Roman" SIZE=2> содержатся новые классы и интерфейсы, предназначенные для поддержки вывода на печать, контекстных меню и клавиш ускоренного вызова меню, а также для обеспечения улучшенной поддержки размещения элементов пользовательского интерфейса на экране, работы с курсорами, полосами прокрутки, цветами и отсечением изображений. В нескольких классах реализована поддержка новой модели обработки событий пакета</FONT><FONT SIZE=2> AWT,</FONT><FONT FACE="Times New Roman" SIZE=2> хотя большая часть работы с событиями сконцентрирована в одном из нескольких новых пакетов, входящих в пакет</FONT><FONT SIZE=2> java.awt.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.awt.datatransfer</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Классы и интерфейсы данного пакета образуют фундамент для обмена информацией между приложениями (а также внутри приложения). В этом пакете также содержатся классы, поддерживающие модель передачи информации путем операций копирования и вставки через буфер обмена </FONT><FONT SIZE=2>(clipboard).</FONT><FONT FACE="Times New Roman" SIZE=2> Можно предполагать, что в будущем пакет будет расширен таким образом, чтобы обеспечить поддержку механизма обмена информацией посредством технологии</FONT><FONT SIZE=2> drag-and-drop.</FONT><FONT FACE="Times New Roman" SIZE=2> Один из основополагающих механизмов обмена информацией, поддерживаемых данным пакетом, базируется на использовании</FONT><FONT SIZE=2> API</FONT><FONT FACE="Times New Roman" SIZE=2> сериализации объектов</FONT><FONT SIZE=2> (Object Serialization API)</FONT><FONT FACE="Times New Roman" SIZE=2> пакета</FONT><FONT SIZE=2> java.io.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.awt.event</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В данном пакете определены классы и интерфейсы новой модели обработки событий пакета</FONT><FONT SIZE=2> AWT.</FONT><FONT FACE="Times New Roman" SIZE=2> Классы и интерфейсы этого пакета можно разделить на три категории:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>Классы событий</FONT><FONT SIZE=2> —</FONT><FONT FACE="Times New Roman" SIZE=2> классы, которые действительно описывают события.</LI></P>
<I><P ALIGN="JUSTIFY"><LI>Слушатели событий</I></FONT><FONT SIZE=2> (listeners) —</FONT><FONT FACE="Times New Roman" SIZE=2> интерфейсы, определяющие методы, которые должны быть реализованы объектами, заинтересованными в получении уведомлений о событиях определенного типа.</LI></P>
<I><P ALIGN="JUSTIFY"><LI>Адаптеры событий</I></FONT><FONT SIZE=2> (adaptors) —</FONT><FONT FACE="Times New Roman" SIZE=2> тривиальные безоператорные реализации интерфейсов слушателей событий, которые хорошо приспособлены для создания подклассов.</LI></P></UL>

</FONT><FONT SIZE=2><P ALIGN="JUSTIFY"></P>
</FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Все события и слушатели событий, определенные в этом пакете, представляют собой расширения класса</FONT><FONT SIZE=2> EventObject</FONT><FONT FACE="Times New Roman" SIZE=2> или интерфейса</FONT><FONT SIZE=2> Event-Listener,</FONT><FONT FACE="Times New Roman" SIZE=2> определенные в пакете</FONT><FONT SIZE=2> java.util. </P>
<B><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">j ava.awt.image</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете содержатся два новых класса фильтров изображений, в которых используется улучшенное масштабирование изображений. Также внесены изменения в классы</FONT><FONT SIZE=2> MemoryImageSource</FONT><FONT FACE="Times New Roman" SIZE=2> и</FONT><FONT SIZE=2> PixelGrabber.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.awt.peer</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Изменения, внесенные в этот пакет, в основном отражают изменения в </FONT><FONT SIZE=2>java.awt.</FONT><FONT FACE="Times New Roman" SIZE=2> Например, к ним относятся новые интерфейсы, которые описывают зависящие от платформы контекстные меню и полосы прокрутки.</P>
</FONT><B><FONT SIZE=2><P>j ava.beans</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете содержится широко разрекламированный</FONT><FONT SIZE=2> JavaBeans API, </FONT><FONT FACE="Times New Roman" SIZE=2>предназначенный для создания и использования встраиваемых программных компонентов многократного использования. Классы и интерфейсы данного пакета можно применять на трех различных уровнях:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>Для создания средств построения приложений, которые программист (и даже не программист) может использовать при создании приложений из отдельных Bean-объектов.</LI></P>
<P ALIGN="JUSTIFY"><LI>Для разработки Bean-объектов, которые можно применять в упомянутых выше средствах построения приложений.</LI></P>
<P ALIGN="JUSTIFY"><LI>Для разработки приложений (без использования упомянутых выше средств построения), в которых применяются Bean-объекты.</LI></P></UL>

<P ALIGN="JUSTIFY">Большинство классов и интерфейсов данного пакета предназначено для разработчиков приложений или более сложных Bean-объектов. Программистам, которые только используют Bean-объекты или разрабатывают простые Bean-объекты, не обязательно изучать большинство особенностей данного пакета.</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>Работа средств построения приложений, применяющих Bean-объекты, базируется на</FONT><FONT SIZE=2> Reflection API,</FONT><FONT FACE="Times New Roman" SIZE=2> определенном в пакете</FONT><FONT SIZE=2> java.lang.reflect,</FONT><FONT FACE="Times New Roman" SIZE=2> а во многих Bean-объектах используются преимущества</FONT><FONT SIZE=2> API </FONT><FONT FACE="Times New Roman" SIZE=2>сериализации объектов</FONT><FONT SIZE=2> (Object Serialization API),</FONT><FONT FACE="Times New Roman" SIZE=2> определенного в пакете </FONT><FONT SIZE=2>java.io.</FONT><FONT FACE="Times New Roman" SIZE=2> В</FONT><FONT SIZE=2> JavaBeans API</FONT><FONT FACE="Times New Roman" SIZE=2> применяется та же модель обработки событий, что и в</FONT><FONT SIZE=2> Java 1.1 AWT,</FONT><FONT FACE="Times New Roman" SIZE=2> и классы и интерфейсы данного пакета, обеспечивающие обработку событий, являются расширениями соответствующего класса и интерфейса, определенных в пакете</FONT><FONT SIZE=2> java.util.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.io</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Пакет</FONT><FONT SIZE=2> java.io —</FONT><FONT FACE="Times New Roman" SIZE=2> самый большой пакет ядра</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> на сегодняшний день. Это случилось потому, что в</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> добавлены следующие компоненты:</P>

<UL>
<P ALIGN="JUSTIFY"><LI>Полный набор новых классов <I>потока символов</I> в дополнение к большинству существующих классов ввода-вывода через <I>поток байтов.</I> Эти новые потоки чтения-записи обеспечивают высокую эффективность и многоязыковую поддержку ввода-вывода текстовой информации.</LI></P>
<P ALIGN="JUSTIFY"><LI>Новые классы и интерфейсы для поддержки сериализации объектов.</LI></P>
<P ALIGN="JUSTIFY"><LI>Ряд новых типов семейства</FONT><FONT SIZE=2> IOException. </LI></P></UL>

</FONT><FONT SIZE=1>
</FONT><B><FONT SIZE=2><P>java.lang</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете содержится ряд новых семейств типа</FONT><FONT SIZE=2> Exception</FONT><FONT FACE="Times New Roman" SIZE=2> и</FONT><FONT SIZE=2> Error, </FONT><FONT FACE="Times New Roman" SIZE=2>а также новые классы</FONT><FONT SIZE=2> Byte, short</FONT><FONT FACE="Times New Roman" SIZE=2> и</FONT><FONT SIZE=2> Void,</FONT><FONT FACE="Times New Roman" SIZE=2> с добавлением которых всем простым типам данных</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> (включая тип</FONT><FONT SIZE=2> void)</FONT><FONT FACE="Times New Roman" SIZE=2> соответствуют определенные типы объектов. Это обстоятельство играет большую роль для пакета</FONT><FONT SIZE=2> j ava. lang. reflect,</FONT><FONT FACE="Times New Roman" SIZE=2> где определяется новый</FONT><FONT SIZE=2> Reflection API.</FONT><FONT FACE="Times New Roman" SIZE=2> К тому же, существенные изменения, направленные на поддержку работы </FONT><FONT SIZE=2>Reflection API,</FONT><FONT FACE="Times New Roman" SIZE=2> внесены и в класс</FONT><FONT SIZE=2> Class.</FONT><FONT FACE="Times New Roman" SIZE=2> В классах</FONT><FONT SIZE=2> Class HClassLoader </FONT><FONT FACE="Times New Roman" SIZE=2>содержатся методы, обеспечивающие нахождение ресурсов, связанных с данным классом, таких как изображения, аудиофайлы, файлы свойств и т.д. Ресурсы играют важную роль в обеспечении многоязыковой поддержки в</FONT><FONT SIZE=2> Java 1.1.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.lang.reflect</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Этот новый пакет позволяет программе на</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> проверять структуру классов</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> и отражать ее на собственную структуру. В</FONT><FONT SIZE=2> java.lang.reflect</FONT><FONT FACE="Times New Roman" SIZE=2> содержатся классы, которые описывают переменные, методы и конструкторы классов и позволяют программе получить исчерпывающую информацию о любом объекте, массиве, методе, конструкторе или переменной. Пакет</FONT><FONT SIZE=2> java.Beans</FONT><FONT FACE="Times New Roman" SIZE=2> в огромной степени базируется именно на этом пакете.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>Java.math</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом новом пакете содержится только два класса, которые поддерживают арифметические операции над целыми числами и над числами с плавающей точкой произвольной точности. В классе</FONT><FONT SIZE=2> Biglnteger</FONT><FONT FACE="Times New Roman" SIZE=2> определены также методы реализации арифметических операций с модулями чисел, проверки простых чисел и других особенностей, необходимых для криптографии.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.net</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Изменения, внесенные в пакет</FONT><FONT SIZE=2> java.net,</FONT><FONT FACE="Times New Roman" SIZE=2> реализованы на достаточно низком уровне. К ним относятся: широковещательные сокеты, опции для сокетов в стиле</FONT><FONT SIZE=2> UNIX,</FONT><FONT FACE="Times New Roman" SIZE=2> а также исключения новых типов, которые обеспечивают большую глубину детализации при обработке сетевых исключений.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.rmi<BR>
</B></FONT><FONT FACE="Times New Roman" SIZE=2>В этом пакете определены основополагающие классы и интерфейсы, которые используются для удаленного вызова методов. Большинство классов данного пакета представляют собой типы исключений. Подпакеты пакета java.</FONT><FONT SIZE=2>rmi</FONT><FONT FACE="Times New Roman" SIZE=2> обеспечивают дополнительные, более специфичные функции. В тех случаях, когда удаленным методам в качестве аргументов необходимо передавать объекты, удаленный вызов метода базируется на сериализации объектов, обеспечиваемой пакетом</FONT><FONT SIZE=2> java.io.</P>
</FONT><FONT FACE="Arial" SIZE=1>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.rmi.dgc</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом небольшом пакете определены классы и интерфейсы, которые необходимы для реализации распределенного сбора мусора</FONT><FONT SIZE=2> (DGC — Distributed Garbage Collection).</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.rmi.registry</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Это другой небольшой пакет, в котором определены классы и интерфейсы, необходимые для предоставления клиенту</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> возможности осуществлять поиск удаленных объектов по имени или возможности объявления сервером</FONT><FONT SIZE=2> Java</FONT><FONT FACE="Times New Roman" SIZE=2> услуг, которые он может предоставить пользователю.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.rmi.server</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Этот пакет является самым большим среди пакетов удаленного вызова методов и представляет собой сердцевину</FONT><FONT SIZE=2> RMI.</FONT><FONT FACE="Times New Roman" SIZE=2> В нем определены классы и интерфейсы, позволяющие Java-программе создавать объекты, которые могут использоваться удаленно другими Java-программами.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.security</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете содержатся классы и интерфейсы, являющиеся фундаментальными абстракциями элементов криптографии: открытых и закрытых ключей, сертификатов, подтверждений о приеме сообщений и цифровых подписей. В данном пакете отсутствуют реализации таких абстракций. По своему замыслу</FONT><FONT SIZE=2> Java Security API</FONT><FONT FACE="Times New Roman" SIZE=2> является независящим от реализации. В</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> отсутствуют реализации по умолчанию, но наряду с этим пакетом можно использовать реализации, осуществляемые продавцом конкретного программного продукта. Базовая реализация механизма безопасности основывается на использовании класса</FONT><FONT SIZE=2> Biglnteger,</FONT><FONT FACE="Times New Roman" SIZE=2> который определен в пакете</FONT><FONT SIZE=2> java .math.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.security.acl</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете определены интерфейсы высокого уровня и некоторые исключения, предназначенные для работы со списками управления доступом</FONT><FONT SIZE=2> (ACL — access control list).</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.security.interfaces</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете определено несколько интерфейсов, которые необходимы для работы схемы безопасности</FONT><FONT SIZE=2> Java Security API,</FONT><FONT FACE="Times New Roman" SIZE=2> независящей от реализации.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P ALIGN="JUSTIFY">java.sql<BR>
</B></FONT><FONT FACE="Times New Roman" SIZE=2>В этом пакете содержится Java Database Connectivity (JDBC) API. Находящиеся здесь классы и интерфейсы позволяют программам на Java посылать</FONT><FONT SIZE=2> SQL-</FONT><FONT FACE="Times New Roman" SIZE=2>запросы базам данных и получать на них ответы. </P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.text</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Классы и интерфейсы этого пакета используются для организации многоязыковой поддержки. В пакете содержатся классы, предназначенные для поддержки форматов представления даты, времени, чисел и текстовых сообщений в стилях, которые приняты в местности, назначенной по умолчанию, или в любой заданной местности. В нем также содержатся классы, обеспечивающие сопоставление строк в соответствии с правилами, принятыми в данной местности, и просмотр символов</FONT><FONT SIZE=2>,</FONT><FONT FACE="Times New Roman" SIZE=2> слов и предложений в строке в соответствии со стилем, принятым в данной местности.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.util</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">Как следует из названия данного пакета, в</FONT><FONT SIZE=2> java.util</FONT><FONT FACE="Times New Roman" SIZE=2> содержатся вспомогательные классы. В этот пакет в</FONT><FONT SIZE=2> Java 1.1</FONT><FONT FACE="Times New Roman" SIZE=2> добавлены новые классы для поддержки моделей обработки событий пакетов</FONT><FONT SIZE=2> AWT</FONT><FONT FACE="Times New Roman" SIZE=2> и</FONT><FONT SIZE=2> Java Beans, </FONT><FONT FACE="Times New Roman" SIZE=2>для определения <I>местности</I></FONT><FONT SIZE=2> (locale)</FONT><FONT FACE="Times New Roman" SIZE=2> и <I>групп ресурсов</I></FONT><FONT SIZE=2> (resource bundles), </FONT><FONT FACE="Times New Roman" SIZE=2>используемых для обеспечения многоязыковой поддержки, а также классы для работы с датой, временем и временными поясами.</P>
</FONT><B><FONT FACE="Arial" SIZE=2><P>java.util.zip</P>
</B></FONT><FONT FACE="Times New Roman" SIZE=2><P ALIGN="JUSTIFY">В этом пакете реализованы классы для расчета контрольных сумм потоков данных, а также для сжатия и архивирования потоков данных с использованием библиотеки сжатия</FONT><FONT SIZE=2> ZLIB</FONT><FONT FACE="Times New Roman" SIZE=2> и форматов файлов</FONT><FONT SIZE=2> ZIP</FONT><FONT FACE="Times New Roman" SIZE=2> и </FONT><FONT SIZE=2>GZIP.</P></FONT></BODY>
</HTML>
