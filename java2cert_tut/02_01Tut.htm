<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>







<head>







<title>2.1)Flow Control, If and switch statements</title>







<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META name="GENERATOR" content="IBM WebSphere Homepage Builder V4.0.0 for Linux">
<link rel="stylesheet" href="tutor.css"></head>















<body bgcolor="#FFFFFF">

<table width=95% border=0 cellpadding=2 cellspacing=0 style="page-break-before: always">

  <col width=147*> <col width=109*> 

  <tr> 

    <td width=57% height=104> 

      <p><a href= "introj2.htm" ><img src= "btnIndex.jpg"  name="Graphic1" alt="Return to Tutorial Index" align=BOTTOM width=55 height=39 border=0></a><a href= "introj2.htm" ><br>

        <br>

        </a><a href= "index.htm" ><img src= "btnHome.jpg"  name="Graphic2" alt="Back to the home page of this site" align=BOTTOM width=55 height=39 border=0></a> 

      </p>

    </td>

    <td width=43%> 

      <p align=RIGHT><img src= "hat.gif"  name="Graphic3" alt="morterboard" align=BOTTOM width=118 height=113 border=0></p>

    </td>

  </tr>

  <tr> 

    <td width=57% height=11> 

      <h1 align=LEFT>Java2 Certification <br>

        Tutorial </h1>

    </td>

    <td width=43% bgcolor="#ff9900"> 

      <p>&nbsp;</p>

    </td>

  </tr>

</table>

<p> You can discuss this topic with others at <a href= "http://www.jchq.net/discus" >http://www.jchq.net/discus</a><br>

  Read reviews and buy a Java Certification book at <a href= "http://www.jchq.net/bookreviews/jcertbooks.htm" >http://www.jchq.net/bookreviews/jcertbooks.htm</a> 

  <br>

</p>

<hr size=5 noshade>

<h1><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>2) Flow control and 



  exception Handling</b></font> </h1>



<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Objective 1)</b></font></h3>







<p><font face="Arial, Helvetica">Write code using <i>if</i> and <i>switch</i> 







  statements and identify legal argument types for these statements.</font></p>







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>If/else statements</b></font> 







</h3>







<p><i>If/else</i> constructs in Java are just as you might expect from other languages. 







  <i>switch/case</i> statements have a few peculiarities.</p>







<p>The syntax for the <i>if/else</i> statement is&nbsp;</p>







<pre>if(boolean condition){ 
        //the boolean was true so do this 
        }else { 
        //do something else 
}</pre>







<p>Java does not have a &quot;<i>then</i>&quot; keyword like the one in Visual 







  Basic.&nbsp;</p>







<p>The curly braces are a general indicator in Java of a compound statement that 







  allows you to execute multiple lines of code as a result of some test. This 







  is known as a <i>block</i> of code. The <i>else</i> portion is always optional.<br>







  <br>







  One idiosyncrasy of the Java <i>if</i> statement is that it must take a boolean 







  value. You cannot use the C/C++ convention of any non zero value to represent 







  true and 0 for false.</p>







<p>Thus in Java the following will simply not compile</p>







<pre>int k =-1; 
        if(k){//Will not compile! 
        System.out.println(&quot;do something&quot;); 
}</pre>







<p>because you must explicitly make the test of k return a boolean value, as in 







  the following example</p>







<pre>if(k == -1){ 
    System.out.println(&quot;do something&quot;); //Compiles OK! 
    } </pre>







<p>As in C/C++ you can miss out the curly brackets thus</p>







<pre>boolean k=true;</pre>







<pre>if(k) 
System.out.println(&quot;do something&quot;); </pre>







<p>This is sometimes considered bad style, because if you modify the code later 







  to include additional statements they will be outside of the conditional block. 







  Thus</p>







<pre>&nbsp;if(k) 
        System.out.println(&quot;do something&quot;); 
        System.out.println(&quot;also do this&quot;);</pre>







<p>The second output will always execute. 







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Switch statements</b></font> 







</h3>







<p>Peter van der Lindens opinion of the switch statement is summed up when he 







  says







<h2>&quot;death to the switch statement&quot;</h2>







<p>Thus this is a subject you should pay extra attention to. The argument to a 







  switch statement must be a <i>byte, char, short</i> or <i>int</i>. You might 







  get an exam question that uses a <i>float</i> or <i>long</i> as the argument 







  to a <i>switch</i> statement.. A fairly common question seems to be about the 







  use of the <i>break</i> statement in the process of falling through a <i>switch</i> 







  statement. Here is an example of this type of question.&nbsp;</p>







<pre>int k=10; 
switch(k){
        case 10: 
                System.out.println(&quot;ten&quot;); 
        case 20: 
                System.out.println(&quot;twenty&quot;); 
        } </pre>







<p>Common sense would indicate that after executing the instructions following 







  a <i>case</i> statement, and having come across another <i>case</i> statement 







  the compiler would then finish falling through the <i>switch</i> statement. 







  However, for reasons best known to the designers of the language <i>case</i> 







  statements only stop falling through when they come across a <i>break</i> statement. 







  As a result, in the above example both the strings ten and twenty will be sent 







  to the output.</p>







<p><br>







  Another little peculiarity that can come up on questions is the placing of the 







  default statement. </p>







<table width="100%" border="0">







  <tr> 







    <td width="9%"><img src= "becareful.gif"  width="76" height="88" align="BOTTOM" border="0"></td>







    <td width="91%"> 







      <h4><font color="red">The default clause does not need to come at the end 







        of a <i>case</i> statement</font></h4>







    </td>







  </tr>







</table>







<p>The conventional place for the default statement is at the end of of case options. 







  Thus normally code will be written as follows</p>







<pre>int k=10; 
switch(k){
        case 10: 
                System.out.println(&quot;ten&quot;); 
                break; 
        case 20: 
                System.out.println(&quot;twenty&quot;); 
                break; 
        default: 
                System.out.println(&quot;This is the default output&quot;); 
} </pre>







<p>This approach mirrors the way most people think. Once you have tried the other 







  possibilities, you perform the default output. However, it is syntactically 







  correct, if not advisable, to code a switch statement with the default at the 







  top</p>







<pre>int k=10; 
    switch(k){ 
    default: //Put the default at the bottom, not here
        System.out.println(&quot;This is the default output&quot;); 
        break; 
    case 10: 
        System.out.println(&quot;ten&quot;); 
        break; 
    case 20: 
        System.out.println(&quot;twenty&quot;); 
        break; 
}</pre>







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Legal arguments for 







  <i>if</i> and <i>switch</i> statements</b></font> </h3>







<p>As mentioned previously an <i>if</i> statement can only take a <i>boolean</i> 







  type and a <i>switch</i> can only take a <i>byte</i>, <i>char, short </i>or<i> 







  int.&nbsp;</i></p>







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>The ternary ? operator</b></font> 







</h3>







<p>Some programmers claim that the ternary operator is useful. I do not consider 



  it so. It is not specifically mentioned in the objectives so please let me know 



  if it does come up in the exam.</p>



<h3>Other flow control statements</h3>



<p>Although the published objectives only mention the <i>if/else</i> and <i>case</i> 



  statements the exam may also cover the <i>do/while</i> and the <i>while</i> 



  loop.</p>



<table width="100%" border="0">







  <tr> 







    <td width="11%"><img src= "Quiz.gif"  width="99" height="101"> </td>







    <td width="89%">&nbsp;</td>







  </tr>







</table>







<hr>







<h4><b>Question 1)</b></h4>







<p>What will happen when you attempt to compile and run the following code?</p>







<pre>public class MyIf{
boolean b;
public static void main(String argv[]){
 MyIf mi = new MyIf();
}

MyIf(){
        if(b){
            System.out.println(&quot;The value of b was true&quot;);
            }
            else{
            System.out.println(&quot;The value of b was false&quot;);
            }
    }
}
</pre>







<p>1) Compile time error variable b was not initialised<br>







  2) Compile time error the parameter to the <i>if</i> operator must evaluate 







  to a <i>boolean</i><br>







  3) Compile time error, cannot simultaneously create and assign value for boolean 







  value<br>







  4) Compilation and run with output of false</p>







<p> 







<hr align="CENTER">







<h4><br>







  <b>Question 2)</b> </h4>







<p></p>







<p>What will happen when you attempt to compile and run this code?</p>







<pre>public class MyIf{
public static void main(String argv[]){
     MyIf mi = new MyIf();
    }
MyIf(){
    boolean b = false;
    if(b=false){
       System.out.println(&quot;The value of b is&quot;+b);
      }
    }
}

1) Run time error, a <i>boolean</i> cannot be appended using the + operator<br>2) Compile time error the parameter to the <i>if</i> operator must evaluate 
  to a <i>boolean</i><br>3) Compile time error, cannot simultaneously create and assign value for boolean 
  value<br>4) Compilation and run with no output</pre>







<hr align="CENTER">







<h4><b>Question 3)</b></h4>







<p><br>







  What will happen when you attempt to compile and run this code?</p>







<pre>public class MySwitch{
public static void main(String argv[]){
    MySwitch ms= new MySwitch();
    ms.amethod();
    }
public void amethod(){
    char k=10; 
        switch(k){ 
        default: 
           System.out.println(&quot;This is the default output&quot;); 
          break; 
        case 10: 
            System.out.println(&quot;ten&quot;);
            break;
        case 20: 
            System.out.println(&quot;twenty&quot;); 
       break; 
       }
    }
}</pre>







<p>1) None of these options<br>







  2) Compile time errror target of switch must be an integral type<br>







  3) Compile and run with output &quot;This is the default output&quot;<br>







  4) Compile and run with output &quot;ten&quot;</p>







<hr align="CENTER">







<h4><b>Question 4)</b></h4>







<p>What will happen when you attempt to compile and run the following code?</p>







<pre>public class MySwitch{
public static void main(String argv[]){
    MySwitch ms= new MySwitch();
    ms.amethod();
    }
public void amethod(){
    int k=10; 
       switch(k){ 
       default: //Put the default at the bottom, not here
           System.out.println(&quot;This is the default output&quot;); 
            break; 
         case 10: 
            System.out.println(&quot;ten&quot;);
         case 20: 
            System.out.println(&quot;twenty&quot;); 
        break; 
       }
    }
}</pre>







<p>1) None of these options<br>







  2) Compile time errror target of switch must be an integral type<br>







  3) Compile and run with output &quot;This is the default output&quot;<br>







  4) Compile and run with output &quot;ten&quot; 







<h4>Question 5)</h4>







<p>Which of the following could be used as the parameter for a switch statement?</p>







<p>1) byte b=1;<br>







  2) int i=1;<br>







  3) boolean b=false;<br>







  4) char c='c';</p>







<p>&nbsp;







<h1>Answers</h1>







<h4><b>Answer 1) </b></h4>







<p> <br>







  4) Compilation and run with output of false<br>







  <br>







  Because the boolean b was created at the class level it did not need to be explicitly 







  initialised and instead took the default value of a boolean which is false. 







  An if statement must evaluate to a boolean value and thus b meets this criterion.</p>







<h4> <br>







  <b>Answer 2)</b></h4>







<p> <br>







  4) Compilation and run with no output<br>







  <br>







  Because b is a boolean there was no error caused by the if statement. If b was 







  of any other data type an error would have occured as you attempted to perform 







  an assignment instead of a comparison. The expression </p>







<pre>if(b=false)</pre>







<p>would normally represent a programmer error. Often the programmer would have 







  ment to say </p>







<pre>if (b==false) </pre>







<p>If the type of b had been anything but boolean a compile time error would have 







  resulted. The requirement for the if expression is that it return a boolean 







  and because</p>







<pre>(b=false )</pre>







<p>does return a boolean it is acceptable (if useless).</p>







<h4><b>Answer 3)</b></h4>







<p> <br>







  4) Compile and run with output &quot;ten&quot;</p>







<h4><br>







  <br>







  <b>Answer 4)</b></h4>







<p> <br>







  1) None of these options<br>







  <br>







  Because of the lack of a break statement after the</p>







<pre>break 10; </pre>







<p>statement the actual output will be <br>







  <br>







  &quot;ten&quot; followed by &quot;twenty&quot; 







<h4>Answer 5)</h4>







<p> 1) byte b=1;<br>







  2) int i=1;<br>







  4) char c='c';







<p>A switch statement can take a parameter of byte, char, short or int.</p>







<p>&nbsp; 







<hr>







<p>&nbsp; 







<table border="1" width="100%">







  <caption><b>Other sources on this topic</b></caption>







  <tr> 







    <td width="100%"><b>The Sun tutorial</b><br>







      <a href= "http://java.sun.com/docs/books/tutorial/java/nutsandbolts/while.html" >http://java.sun.com/docs/books/tutorial/java/nutsandbolts/while.html</a><a







						href= "http://java.sun.com/docs/books/tutorial/java/javaOO/accesscontrol.html" ><br>







      <br>







      </a><b>Richard Baldwin Covers this topic at</b><br>







      <a href= "http://www.geocities.com/Athens/Acropolis/3797/Java026.htm#the if-else statement" >http://www.Geocities.com/Athens/Acropolis/3797/Java026.htm#the 







      if-else statement</a><a href= "http://www.geocities.com/Athens/Acropolis/3797/Java040.htm" ><br>







      <br>







      </a><b>Jyothi Krishnan on this topic at </b><br>



      <a href= "http://www.geocities.com/SiliconValley/Network/3693/obj_sec2.html#obj5" >http://www.geocities.com/SiliconValley/Network/3693/obj_sec2.html#obj5</a><br>



      <br>



      <b>Bruce Eckel, Thinking in Java<br>



      </b><a href= "http://codeguru.earthweb.com/java/tij/tij0045.shtml" >http://codeguru.earthweb.com/java/tij/tij0045.shtml</a><b> 



      </b></td>







  </tr>







</table>







<p>Last updated<br>







  24 Feb 2000<br>







  copyright &copy; Marcus Green 1999<br>



  most recent version at www.jchq.net<br>







</p>







<p>&nbsp; </p>







<p>&nbsp; </p>







</body>







</html>







