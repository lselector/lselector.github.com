<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>

<title>1.3) Declarations and access control</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META name="GENERATOR" content="IBM WebSphere Homepage Builder V4.0.0 for Linux">
<STYLE TYPE="text/css">

<!--

p {  clip:          rect(   ); position: relative; left: 12%; width: 80%}

pre {  position: relative; left: 20%; clip:  rect(   )}

li {  position: relative; clip:   rect(   ); text-indent: 20%}

h1 {  position: relative; left: 4%; clip:  rect(   )}

h2 {  position: relative; left: 8%; clip:  rect(   )}

h3 {  position: relative; left: 8%; clip:  rect(   )}

h4 {  position: relative; left: 8%; clip:  rect(   ); font-size: 15pt}

-->

</STYLE>

</head>



<body bgcolor="#FFFFFF">
<TABLE width="95%" border="0" cellpadding="2" cellspacing="0" style="page-break-before: always">
  <TBODY>
    <TR>
      <TD width="57%" height="104">
      <H1><A href= "introj2.htm" ><IMG src= "btnIndex.jpg"  name="Graphic1" alt="Return to Tutorial Index" align="BOTTOM" width="55" height="39" border="0"></A>
      <A href= "introj2.htm" ><BR>
      <BR>
      </A><A href= "index.htm" ><IMG src= "btnHome.jpg"  name="Graphic2" alt="Back to the home page of this site" align="BOTTOM" width="55" height="39" border="0"></A></H1>
      </TD>
      <TD width="43%">
      <P align="RIGHT"><IMG src= "hat.gif"  name="Graphic3" alt="morterboard" align="BOTTOM" width="118" height="113" border="0"></P>
      </TD>
    </TR>
    <TR>
      <TD width="57%" height="11">
      <H1 align="LEFT">Java2 Certification <BR>
      Tutorial</H1>
      </TD>
      <TD width="43%" bgcolor="#ff9900">
      <P>&nbsp;</P>
      </TD>
    </TR>
  </TBODY>
</TABLE>
<p> You can discuss this topic with others at <a href= "http://www.jchq.net/discus" >http://www.jchq.net/discus</a><br>
  Read reviews and buy a Java Certification book at <a href= "http://www.jchq.net/bookreviews/jcertbooks.htm" >http://www.jchq.net/bookreviews/jcertbooks.htm</a> 
  <br>
</p>
<hr size=5 noshade>
<h1><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>1) Declarations and 
  Access Control</b></font> </h1>

<h2>Objective 3 </h2>

<p><font face="Arial, Helvetica">For a given class, determine if a default constructor 

  will be created and if so state the prototype of that constructor.</font></p>

<h3>Note on this objective </h3>

<p><i>This is a neat small objective that concentrates on an easily overlooked 

  aspect of the Java language</i></p>

<h3>What is a constructor? </h3>

<p>You need to understand the concept of a constructor to understand this objective. 
  Briefly, it is special type of method that runs automatically when an class 
  is instantiated. Constructors are often used to initialise values in the class. 
  Constructors have the same name as the class and no return value. You may get 
  questions in the exam that have methods with the same name as the class but 
  a return type, such as int or string. Be careful and ensure that any method 
  you assume is a constructor does not have a return type.</p>

<p>Here is an example of a class with a constructor that prints out the string 

  &quot;Greetings from Crowle&quot; when an instance of the class is created.</p>

<pre>public class Crowle{
        public static void main(String argv[]){
        Crowle c = new Crowle();
        }
        Crowle(){
        System.out.println(&quot;Greetings from Crowle&quot;);
        }
}</pre>

<h3>When does java supply the default constructor? </h3>

<p>If you do not specifically define any constructors, the compiler inserts an 

  invisible zero parameter constructor &quot;behind the scenes&quot;. Often this 

  is of only theoretical importance, but the important qualification is that you 

  only get a default zero parameter constructor if you do not create any of your 

  own.</p>

<table width="100%" border="0">

  <tr> 

    <td width="14%"><img src= "key2.gif"  width="106" height="73"

align="bottom" border="0"></td>

    <td width="86%"> 

      <h4><font color="red">If you create constructors of your own, <br>
        Java does not supply the default zero parameter constructor</font> </h4>

    </td>

  </tr>

</table>

<p> As soon as you create any constructors of your own you loose the default no 
  parameter constructor. If you then try to create an instance of the class without 
  passing any parameters (i.e. invoking the class with a zero parameter constructor), 
  you will get an error. Thus as soon as you create any constructors for a class 
  you need to create a zero parameter constructor. This is one of the reasons 
  that code generators like Borland/Inprise JBuilder create a zero parameter constructor 
  when they generate a class skeleton.</p>
<p> The following example illustrates code that will not compile. When the compiler 
  checks to create the instance of the Base class called <i>c</i> it inserts a 
  call to the zero parameter constructor. Because <i>Base</i> has an <i>integer</i> 
  constructor the zero parameter constructor is not available and a compile time 
  error occurs. This can be fixed by creating a &quot;do nothing&quot; zero parameter 
  constructor in the class <i>Base</i>.</p>

<pre>//Warning: will not compile.</pre>

<pre>class Base{
Base(int i){
        System.out.println(&quot;single int constructor&quot;);
        }
}

public class Cons {
        public static void main(String argv[]){
        Base c = new Base();
        }
}
</pre>

<pre>//This will compile</pre>

<pre>class Base{
Base(int i){
        System.out.println(&quot;single int constructor&quot;);
        }</pre>

<pre>Base(){}
}



public class Cons {
        public static void main(String argv[]){
        Base c = new Base();
        }
}</pre>

<h3>The prototype of the default constructor </h3>

<p>The objective asks you to be aware of the prototype of the default constructor. 

  Naturally it must have no parameters. The most obvious default is to have no 

  scope specifier, but you could define the constructor as public or protected.<br>

  <br>

  <i>Constructors cannot be native, abstract, static, synchronized or final.<br>

  <br>

  </i>That piece of information was derived directly from a compiler error message. 

  It seems that the quality of the error messages is improving with the new releases 

  of Java. I have heard that the new IBM Java compilers have good error reporting. 

  You might be well advised to have more than one version of the Java compiler 

  available to check your code and hunt down errors. 

<h1>Exercises </h1>

<h3>Exercise 1</h3>

<p>Create a class called Salwarpe with a method called hello that prints out the 

  &quot;Hello&quot;. In the main method of the class create an instance of itself 

  called s1 and call the hello method from that instance. Compile and run the 

  program so you can see the output. </p>

<h3>Exercise 2</h3>

<p>Still using the Salwarpe.java file comment out the line that creates the s1 

  instance and calls its hello method. Create a public constructor for the class 

  that takes an integer parameter. and prints out the value of the integer. Create 

  an instance of the class called s2 passing the value of 99 to the constructor. 

  Compile and run the program so you can see it print out the output </p>

<h3>Exercise 3</h3>

<p>Uncomment the line that creates the s1 instance and modify the program so it 

  will compile and run printing out both Hello and 99.</p>

<h3>Suggested Solution for Exercise 1</h3>

<pre>public class Salwarpe {
        public static void main(String argv[]){
        Salwarpe s1 = new Salwarpe();
        s1.hello();
        }
        public void hello(){
        System.out.println(&quot;Hello&quot;);
        }
}</pre>

<h3>Suggested Solution for Exercise 2</h3>

<pre>public class Salwarpe {
        public static void main(String argv[]){
        //Salwarpe s1 = new Salwarpe();
        //s1.hello();
        Salwarpe s2 = new Salwarpe(99);
        }
        public void hello(){
        System.out.println(&quot;Hello&quot;);
        }
        public Salwarpe(int i){
        System.out.println(i);
        }
}


</pre>

<h3> Suggested Solution for Exercise 3</h3>

<pre>public class Salwarpe {
        public static void main(String argv[]){
        Salwarpe s1 = new Salwarpe();
        s1.hello();
        Salwarpe s2 = new Salwarpe(99);
        }
        public void hello(){
        System.out.println(&quot;Hello&quot;);
        }
        public Salwarpe(int i){
        System.out.println(i);
        }
        public Salwarpe(){}
}


</pre>

<p>Note how you must create a zero parameter constructor for this final exercise. 

  Once you have created any constructors for a class, Java will not provide the 

  &quot;behind the scenes&quot; zero parameter constructor that was available 

  in exercise 1.<br>

</p>

<h3>&nbsp; </h3>

<table width="100%" border="0">

  <tr> 

    <td width="20%"><img src= "Quiz.gif"  width="99" height="101"> </td>

    <td width="80%">&nbsp;</td>

  </tr>

</table>

<hr>

<h1>Questions</h1>

<h4><b>Question 1)</b></h4>

<p>Given the following class definition</p>

<pre>class Base{
        Base(int i){}
}

class DefCon extends Base{
DefCon(int i){
     //XX
     }
}</pre>

<p>Which of the following lines would be legal individually if added at the line 

  marked //XX?</p>

<p>1) super();<br>

  2) this();<br>

  3) this(99);<br>

  4)super(99);</p>

<hr align="CENTER">

<h4><b>Question 2)</b></h4>

<p>Given the following class</p>

<pre>public class Crowle{
        public static void main(String argv[]){
        Crowle c = new Crowle();
        }
        Crowle(){
        System.out.println(&quot;Greetings from Crowle&quot;);
        }
}
</pre>

<pre>What is the datatype returned by the constructor?</pre>

<p>1) null<br>

  2) integer<br>

  3) String<br>

  4) no datatype is returned</p>

<hr align="CENTER">

<h4> <b>Question 3)</b> </h4>

<p>What will happen when you attempt to compile and run the following code?</p>

<pre>public class Crowle{
        public static void main(String argv[]){
        Crowle c = new Crowle();
        }
void Crowle(){
        System.out.println(&quot;Greetings from Crowle&quot;);
        }
}
</pre>

<p>1) Compilation and output of the string &quot;Greetings from Crowle&quot;<br>

  2) Compile time error, constructors may not have a return type<br>

  3) Compilation and output of string &quot;void&quot;<br>

  4) Compilation and no output at runtime</p>

<hr align="CENTER">

<h4><br>

  <b>Question 4)</b> </h4>

<p>What will happen when you attempt to compile and run the following class?</p>

<pre>class Base{
        Base(int i){
        System.out.println(&quot;Base&quot;);
        }



}

class Severn extends Base{
public static void main(String argv[]){
        Severn s = new Severn();
        }
        void Severn(){
        System.out.println(&quot;Severn&quot;);
        }
}
</pre>

<p>1) Compilation and output of the string &quot;Severn&quot; at runtime<br>

  2) Compile time error<br>

  3) Compilation and no output at runtime<br>

  4) Compilation and output of the string &quot;Base&quot;</p>

<hr align="CENTER">

<h4>Question 5)</h4>

<p> <br>

  Which of the following statements are true?</p>

<p> <br>

  1) The default constructor has a return type of void<br>

  2) The default constructor takes a parameter of void<br>

  3) The default constructor takes no parameters<br>

  4) The default constructor is not created if the class has any constructors 

  of its own.</p>

<hr>

<h1>Answers </h1>

<h4><b>Answer to Question 1)</b></h4>

<p><b> <br>

  </b>4)super(99);<br>

  <br>

  Because the class Base has a constructor defined the compiler will not insert 

  the default zero argument constructor. Therefore calls to <i>super()</i> will 

  cause an error. A call to <i>this()</i> is an attempt to call a non existant 

  zero argument constructor in the current class. The call to <i>this(99)</i> 

  causes a circular reference and will cause a compile time error.</p>

<h4> <br>

  <b>Answer to Question 2)</b></h4>

<p> <br>

  4) no datatype is returned<br>

  <br>

  It should be fairly obvious that no datatype is returned as by definition constructors 

  do not have datatypes. </p>

<h4><br>

  <b>Answer to Question 3)</b></h4>

<p>4) Compilation and no output at runtime<br>

  <br>

  Because the method Crowle has a return type it is not a constructor. Therefore 

  the class will compile and at runtime the method Crowle is not called. </p>

<h4><br>

  <br>

  <b>Answer to Question 4)</b></h4>

<p><b> <br>

  </b>2) Compile time error<br>

  <br>

  An error occurs when the class Severn attempts to call the zero parameter constructor 

  in the class <i>Base<br>

  </i></p>

<h4><b>Answer to Question 5)</b></h4>

<p><b> <br>

  </b>3) The default constructor takes no parameters<br>

  4) The default constructor is not created if the class has any constructors 

  of its own.<br>

  <br>

  Option 1 is fairly obviously wrong as constructors never have a return type. 

  Option 2 is very dubious as well as Java does not offer void as a type for a 

  method or constructor.</p>

<table border="1" width="100%">

  <caption><b>Other sources on this topic</b></caption>

  <tr> 

    <td width="100%"><b>This topic is covered in the Sun Tutorial at <br>

      </b><a href= "http://java.sun.com/docs/books/tutorial/java/javaOO/constructors.html" >http://java.sun.com/docs/books/tutorial/java/javaOO/constructors.html</a><br>

      <b>Richard Baldwin Covers this topic at<br>

      </b><a href= "http://www.geocities.com/Athens/Acropolis/3797/Java042.htm#default constructor" >http://www.Geocities.com/Athens/Acropolis/3797/Java042.htm#default 

      constructor</a><br>

      <b>Jyothi Krishnan on this topic at <br>

      </b><a href= "http://www.geocities.com/SiliconValley/Network/3693/obj_sec1.html#obj3" >http://www.geocities.com/SiliconValley/Network/3693/obj_sec1.html#obj3</a><br>
      <b>Bruce Eckel Thinking In Java<br>
      </b><a href= "http://codeguru.earthweb.com/java/tij/tij0050.shtml#Heading143" >http://codeguru.earthweb.com/java/tij/tij0050.shtml#Heading143</a></td>

  </tr>

</table>

<p>Last updated<br>

  26 Dec 1999<br>

  copyright &copy; Marcus Green 1999<br>
  most recent copy at www.jchq.net</p>

<p><br>

</p>

<h3>&nbsp;</h3>

<h3>&nbsp;</h3>

</body>

</html>

