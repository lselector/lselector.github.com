<html>







<head>







<title>5.2) Operators and assignments</title>







<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">















<link rel="stylesheet" href="tutor.css"></head>















<body bgcolor="#FFFFFF">

<table width=95% border=0 cellpadding=2 cellspacing=0 style="page-break-before: always">

  <col width=147*> <col width=109*> 

  <tr> 

    <td width=57% height=104> 

      <p><a href= "introj2.htm" ><img src= "btnIndex.jpg"  name="Graphic1" alt="Return to Tutorial Index" align=BOTTOM width=55 height=39 border=0></a><a href= "introj2.htm" ><br>

        <br>

        </a><a href= "index.htm" ><img src= "btnHome.jpg"  name="Graphic2" alt="Back to the home page of this site" align=BOTTOM width=55 height=39 border=0></a> 

      </p>

    </td>

    <td width=43%> 

      <p align=RIGHT><img src= "hat.gif"  name="Graphic3" alt="morterboard" align=BOTTOM width=118 height=113 border=0></p>

    </td>

  </tr>

  <tr> 

    <td width=57% height=11> 

      <h1 align=LEFT>Java2 Certification <br>

        Tutorial </h1>

    </td>

    <td width=43% bgcolor="#ff9900"> 

      <p>&nbsp;</p>

    </td>

  </tr>

</table>

<p> You can discuss this topic with others at <a href= "http://www.jchq.net/discus" >http://www.jchq.net/discus</a><br>

  Read reviews and buy a Java Certification book at <a href= "http://www.jchq.net/bookreviews/jcertbooks.htm" >http://www.jchq.net/bookreviews/jcertbooks.htm</a> 

  <br>

</p>

<hr size=5 noshade>

<h1> <font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>5) Operators and Assignments</b></font> 



</h1>



<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Objective 2)</b></font> 







</h3>







<p><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS">Determine the result of 







  applying the boolean equals(Object) method to objects of any combination of 







  the classes java.lang.String java.lang.Boolean and java.lang.Object.</font></p>







<p>If (like me) you are from a background with Visual Basic, the idea of any sort 







  of comparison apart from using some variation of the = operator may seem alien. 







  &quot;In the real world&quot; this is particularly important with reference 







  to <i>Strings</i> as they are so commonly used,however For the purpose of the 







  exam you may get questions that ask about the <i>equals</i> operator with reference 







  to <i>Object</i> references and <i>Boolean</i>. Note that the question asks 







  about the <i>Boolean</i> class not the <i>boolean</i> primitive (from which 







  you cannot invoke a method)</p>







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>The difference between 







  <i>equals</i> and ==</b></font> </h3>







<p>The <i>equals</i> method can be considered to perform a deep comparison of 







  the value of an object, whereas the == operator performs a shallow comparison. 







  The <i>equals</i> method compares what an object points to rather than the pointer 







  itself (if we can admit that Java has pointers). This indirection may appear 







  clear to C++ programmers but there is no direct comparison in Visual Basic.&nbsp;</p>







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Using the <i>equals</i> 







  method with String</b></font> </h3>







<p>The <i>equals</i> method returns a <i>boolean</i> primitive. This means it 







  can be used to drive an <i>if</i>, <i>while</i> or other looping statement. 







  It can be used where you would use the == operator with a primitive. The operation 







  of the <i>equal</i> method and == operator has some strange side effects when 







  used to compare Strings. This is one occasion when the immutable nature of <i>Strings</i>, 







  and the way they are handled by Java, can be confusing.&nbsp;</p>







<p>There are two ways of creating a String in Java. The one way does not use the 







  <i>new</i> operator. Thus normally a String is created</p>







<pre>String s = new String(&quot;Hello&quot;);&nbsp;</pre>







<p>but a slightly shorter method can be used&nbsp;</p>







<pre>String s= &quot;GoodBye&quot;;&nbsp;</pre>







<p>Generally there is little difference between these two ways of creating strings, 







  but the Exam may well ask questions that require you to know the difference.&nbsp;</p>







<p>The creation of two strings with the same sequence of letters without the use 







  of the <i>new</i> keyword will create pointers to the same String in the Java 







  String pool. The String pool is a way Java conserves resources. To illustrate 







  the effect of this&nbsp;</p>







<pre>String s = &quot;Hello&quot;;  
String s2 = &quot;Hello&quot;; 
if (s==s2){  
    System.out.println(&quot;Equal without new operator&quot;);  
    }  
String t = new String(&quot;Hello&quot;);  
string u = new String(&quot;Hello&quot;); 
if (t==u){  
    System.out.println(&quot;Equal with new operator&quot;);  
    }
</pre>







<p>From the previous objective you might expect that the first output &quot;Equal 







  without new operator&quot; would never be seen as s and s2 are different objects, 







  and the == operator tests what an object points to, not its value. However because 







  of the way Java conserves resources by re-using identical strings that are created 







  without the new operator s and s2 have the same &quot;address&quot; and the 







  code does output the string&nbsp;</p>







<p>&quot;Equal without new operator&quot;&nbsp;</p>







<p>However with the second set of strings t and u, the <i>new</i> operator forces 







  Java to create separate strings. Because the == operator only compares the address 







  of the object, not the value, t and u have different addresses and thus the 







  string &quot;Equal with new operator&quot; is never seen.&nbsp; 







<p>&nbsp; 







<table width="100%" border="0">







  <tr> 







    <td width="9%"><img src= "key2.gif"  width="106" height="73"







align="bottom" border="0"></td>







    <td width="91%"> 







      <h4><font color="red">The <i>equals</i> method applied to a String, however 







        that String was <br>







        created, performs a character by character comparison</font> </h4>







      </td>







  </tr>







</table>







<p>The business of the use of the string pool and the difference between the use 







  of == and the equals method is not obvious, particularly if you have a Visual 







  Basic background. The best way to understand it is to create some examples for 







  yourself to see how it works. Try it with various permutations of identical 







  strings created with and without the new operator.&nbsp;&nbsp;







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Using the <i>equals</i> 







  method with Boolean</b></font> </h3>







<p>The requirement to understand the use of the equals operator on <i>java.lang.Boolean</i> 







  is a potential gotcha. <i>Boolean</i> is a wrapper object for the <i>boolean</i> 







  primitive. It is an object and using <i>equals</i> on it will test&nbsp;</p>







<p>According to the JDK documentation the <i>equals</i> method of the Boolean 







  wrapper class&nbsp;</p>







<p>&quot;Returns true if and only if the argument is not null and is a Boolean 







  object that contains the same boolean value as this object&quot;.&nbsp;</p>







<p>eg&nbsp;</p>







<pre>Boolean b1 = new Boolean(true);  
Boolean b2 = new Boolean(true); 
if(b1.equals(b2)){  
    System.out.println(&quot;We are equal&quot;);  
    }
&nbsp;</pre>







<p>As a slight aside on the subject of <i>boolean</i> and <i>Boolean</i>, once 







  you are familiar with the <i>if</i> operator in Java you will know you cannot 







  perform the sort of implicit conversion to a boolean beloved of bearded C/C++ 







  programmers. By this I mean&nbsp; <br>







  &nbsp;</p>







<pre>int x =1; 
if(x){  
    //do something, but not in Java  
    }
&nbsp;</pre>







<p>This will not work in Java because the parameter for the <i>if</i> operator 







  must be a boolean evaluation, and Java does not have the C/C++ concept whereby 







  any non null value is considered to be true. However you may come across the 







  following in Java&nbsp;</p>







<pre>boolean b1=true; 
if(b1){  
    //do something in java  
    }</pre>







<p>Although this is rather bad programing practice it is syntactically correct, 







  as the parameter for the <i>if</i> operation is a boolean 







<h3><font face="GENEVA, HELVETICA, ARIAL, LUCIDA SANS"><b>Using the <i>equals</i> 







  method with Object</b></font> </h3>







<p>Due to the fundamental design of Java an instance of any class is also an instance 







  of java.lang.Object. Testing with equals performs a test on the Object as a 







  result of the return value of the <i>toString</i>() method. For an Object the 







  toString method simply returns the memory address. Thus the result is the equivalent 







  of performing a test using the == operator. As java is not designed to manipulate 







  memory addresses or pointers this is not a particularly useful test.</p>







<p>Take the following example</p>







<pre>public class MyParm{
public static void main(String argv[]){
        Object m1 = new Object();
        Object m2 = new Object();
        System.out.println(m1);
        System.out.println(m2);
        if (m1.equals(m2)){
               System.out.println(&quot;Equals&quot;);
                }else{
                System.out.println(&quot;Not Equals&quot;);
                }
        }                
}
</pre>







<p>If you attempt to compile and run this code you will get an output of</p>







<pre>java.lang.Object@16c80b
java.lang.Object@16c80a

Not Equals</pre>







<p>Those wierd values are memory addresses, and probably not what you want at 
  all. 
<hr>







<div align="center"></div>







<table width="100%" border="0">







  <tr> 







    <td width="11%"><img src= "Quiz.gif"  width="99" height="101"></td>







    <td width="89%">&nbsp;</td>







  </tr>







</table>







<h1>Questions</h1>







<h4><b>Question 1)</b></h4>







<p>What will happen when you attempt to compile and run the following code?</p>







<pre>public class MyParm{
public static void main(String argv[]){
        String s1= &quot;One&quot;;
        String s2 = &quot;One&quot;;
        if(s1.equals(s2)){
                System.out.println(&quot;String equals&quot;);
                }
        boolean b1 = true;
        boolean b2 = true;
        if(b1.equals(b2)){
                         System.out.println(&quot;true&quot;);
                         }
        }
}
</pre>







<p>1) Compile time error<br>







  2) No output<br>







  3) Only &quot;String equals&quot;<br>







  4) &quot;String equals&quot; followed by &quot;true&quot;<br>







<hr align="CENTER">







<h4><b>Question 2)</b> </h4>







<p></p>







<p>What will happen when you attempt to compile and run the following code?</p>







<pre></pre>







<pre>String s1= &quot;One&quot;;
String s2 = new String(&quot;One&quot;);
if(s1.equals(s2)){
               System.out.println(&quot;String equals&quot;);
          }
Boolean b1 = new Boolean(true);
Boolean b2 = new Boolean(true);
if(b1==b2){
          System.out.println(&quot;Boolean Equals&quot;);
   }</pre>







<p>1) Compile time error<br>
  2) &quot;String equals&quot; only<br>
  3) &quot;String equals&quot; followed by &quot;Boolean equals&quot;<br>
  4) &quot;Boolean equals&quot; only</p>







<p> 







<hr align="CENTER">







<h4><b>Question 3)</b> </h4>







<p></p>







<p><b><br>







  </b>What will be the result of attempting to compile and run the following code?</p>







<pre>        Object o1 = new Object();
        Object o2 = new Object();
        o1=o2;
        if(o1.equals(o2))
                System.out.println(&quot;Equals&quot;);
        }</pre>







<p>1) Compile time error<br>







  2) &quot;Equals&quot;<br>







  3) No output<br>







  4) Run time error 







<h1>Answers </h1>







<h4><b>Answer 1)</b></h4>







<p> 1) Compile time error<br>







  <br>







  The line b1.equals() will cause an error because b1 is a primitive and primitives 







  do not have any methods. If it had been created as the primitive wrapper Boolean 







  then you could call the equals method.</p>







<h4> <br>







  <b>Answer 2)</b></h4>







<p> 2) &quot;String equals&quot; only<br>







  <br>







  Testing an instance of the Boolean primitive wrapper with the == operator simply 







  tests the memory address. </p>







<h4><b> <br>







  Answer 3)</b></h4>







<p> <br>







  2) &quot;Equals&quot;<br>







  <br>







  Because the one instance of Object has been assigned to the other with the line<br>







  <br>







  o1=o2;<br>







  <br>







  They now point to the same memory address and the test with the <i>equals</i> 







  method will return true</p>







<table border="1" width="100%">







  <caption><b>Other sources on this topic</b></caption>







  <tr> 







    <td width="100%"><b>Jyothi Krishnan on this topic at <br>







      </b><a href= "http://www.geocities.com/SiliconValley/Network/3693/obj_sec5.html#obj16" >http://www.geocities.com/SiliconValley/Network/3693/obj_sec5.html#obj16<br>







      <br>







      </a><b>Michael Thomas<br>







      </b><a href= "http://www.michael-thomas.com/java/JCP_Operators.htm#equals()" >http://www.michael-thomas.com/java/JCP_Operators.htm#equals()</a></td>







  </tr>







</table>







<p>Last updated<br>







  10 January 2000<br>



  copyright &copy; Marcus Green 2000<br>







</p>







<p>&nbsp;</p>







<h1>&nbsp;</h1>







<p>&nbsp;</p>







<p>&nbsp;</p>







<p>&nbsp;</p>







</body>







</html>







